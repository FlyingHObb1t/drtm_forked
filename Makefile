#OPT ?= -O2 -g2 -DNDEBUG      # (A) Production use (optimized mode)
#OPT ?= -O2 -g2 -DNDEBUG -funroll-all-loops
OPT ?= -O0 -g2              # (B) Debug mode, w/ full line-level debugging symbols
#OPT ?= -O2 -fno-omit-frame-pointer -g2 -DNDEBUG # (C) Profiling mode: opt, but w/debugging symbols
#-----------------------------------------------

CC=gcc
CXX=g++

CHOP=$(strip $(C))

# detect what platform we're building on
$(shell CC=$(CC) CXX=$(CXX) TARGET_OS=$(TARGET_OS) CHOP=$(CHOP)\
    ./build_detect_platform build_config.mk ./)
# this file is generated by the previous line to set build flags and sources
include build_config.mk

TIANXI_FLAGS=-I/users/PES0781/frankli/install/cppzmq-4.5.0/include -fpermissive -I/users/PES0781/frankli/install/gflags-2.2.1/include -I/users/PES0781/frankli/install/glog-0.3.5/include -L/users/PES0781/frankli/install/gflags-2.2.1/lib -L/users/PES0781/frankli/install/glog-0.3.5/lib -lgflags -lglog

CFLAGS += -I. -I./include $(PLATFORM_CCFLAGS) $(OPT) $(TIANXI_FLAGS)
CXXFLAGS += -I. -I./include $(PLATFORM_CXXFLAGS) $(OPT) -std=c++0x -std=c++0x $(TIANXI_FLAGS)

LDFLAGS += $(PLATFORM_LDFLAGS)
LIBS += $(PLATFORM_LIBS)

LIBOBJECTS = $(SOURCES:.cc=.o)
MEMENVOBJECTS = $(MEMENV_SOURCES:.cc=.o)

LIBRARY = libleveldb.a
MEMENVLIBRARY = libmemenv.a

default: all

all: $(SHARED) $(LIBRARY)

clean:
	-rm -f $(PROGRAMS) $(BENCHMARKS) $(LIBRARY) $(SHARED) $(MEMENVLIBRARY) */*.o */*/*.o ios-x86/*/*.o ios-arm/*/*.o build_config.mk
	-rm -rf ios-x86/* ios-arm/*

$(LIBRARY): $(LIBOBJECTS)
	rm -f $@
	$(AR) -rs $@ $(LIBOBJECTS)

dbtest: oltp/dbtest.o $(LIBOBJECTS) $(TESTUTIL)
	$(CXX) $(CXXFLAGS) $(LDFLAGS) oltp/dbtest.o $(LIBOBJECTS) $(TESTUTIL) -o $@ $(LIBS)


